/* ! fancyBox v2.1.5 fancyapps.com | fancyapps.com/fancybox/#license */
(function(s, H, f, w) { let K = f('html'); let q = f(s); let p = f(H); var b = f.fancybox = function() { b.open.apply(this, arguments) }; let J = navigator.userAgent.match(/msie/i); let C = null; let t = H.createTouch !== w; let u = function(a) { return a && a.hasOwnProperty && a instanceof f }; let r = function(a) { return a && f.type(a) === 'string' }; let F = function(a) { return r(a) && 0 < a.indexOf('%') }; let m = function(a, d) { let e = parseInt(a, 10) || 0; d && F(a) && (e *= b.getViewport()[d] / 100); return Math.ceil(e) }; let x = function(a, b) { return m(a, b) + 'px' }; f.extend(b, {
    version: '2.1.5', defaults: {
        padding: 15, margin: 20,
        width: 800, height: 600, minWidth: 100, minHeight: 100, maxWidth: 9999, maxHeight: 9999, pixelRatio: 1, autoSize: !0, autoHeight: !1, autoWidth: !1, autoResize: !0, autoCenter: !t, fitToView: !0, aspectRatio: !1, topRatio: 0.5, leftRatio: 0.5, scrolling: 'auto', wrapCSS: '', arrows: !0, closeBtn: !0, closeClick: !1, nextClick: !1, mouseWheel: !0, autoPlay: !1, playSpeed: 3E3, preload: 3, modal: !1, loop: !0, ajax: { dataType: 'html', headers: { 'X-fancyBox': !0 }}, iframe: { scrolling: 'auto', preload: !0 }, swf: { wmode: 'transparent', allowfullscreen: 'true', allowscriptaccess: 'always' },
        keys: { next: { 13: 'left', 34: 'up', 39: 'left', 40: 'up' }, prev: { 8: 'right', 33: 'down', 37: 'right', 38: 'down' }, close: [27], play: [32], toggle: [70] }, direction: { next: 'left', prev: 'right' }, scrollOutside: !0, index: 0, type: null, href: null, content: null, title: null, tpl: {
            wrap: '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>', image: '<img class="fancybox-image" src="{href}" alt="" />', iframe: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' +
(J ? ' allowtransparency="true"' : '') + '></iframe>', error: '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>', closeBtn: '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>', next: '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>', prev: '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
        }, openEffect: 'fade', openSpeed: 250, openEasing: 'swing', openOpacity: !0,
        openMethod: 'zoomIn', closeEffect: 'fade', closeSpeed: 250, closeEasing: 'swing', closeOpacity: !0, closeMethod: 'zoomOut', nextEffect: 'elastic', nextSpeed: 250, nextEasing: 'swing', nextMethod: 'changeIn', prevEffect: 'elastic', prevSpeed: 250, prevEasing: 'swing', prevMethod: 'changeOut', helpers: { overlay: !0, title: !0 }, onCancel: f.noop, beforeLoad: f.noop, afterLoad: f.noop, beforeShow: f.noop, afterShow: f.noop, beforeChange: f.noop, beforeClose: f.noop, afterClose: f.noop
    }, group: {}, opts: {}, previous: null, coming: null, current: null, isActive: !1,
    isOpen: !1, isOpened: !1, wrap: null, skin: null, outer: null, inner: null, player: { timer: null, isActive: !1 }, ajaxLoad: null, imgPreload: null, transitions: {}, helpers: {}, open: function(a, d) { if (a && (f.isPlainObject(d) || (d = {}), !1 !== b.close(!0))) { return f.isArray(a) || (a = u(a) ? f(a).get() : [a]), f.each(a, function(e, c) { let l = {}; let g; let h; let k; let n; let m; f.type(c) === 'object' && (c.nodeType && (c = f(c)), u(c) ? (l = { href: c.data('fancybox-href') || c.attr('href'), title: f('<div/>').text(c.data('fancybox-title') || c.attr('title')).html(), isDom: !0, element: c },
    f.metadata && f.extend(!0, l, c.metadata())) : l = c); g = d.href || l.href || (r(c) ? c : null); h = d.title !== w ? d.title : l.title || ''; n = (k = d.content || l.content) ? 'html' : d.type || l.type; !n && l.isDom && (n = c.data('fancybox-type'), n || (n = (n = c.prop('class').match(/fancybox\.(\w+)/)) ? n[1] : null)); r(g) && (n || (b.isImage(g) ? n = 'image' : b.isSWF(g) ? n = 'swf' : g.charAt(0) === '#' ? n = 'inline' : r(c) && (n = 'html', k = c)), n === 'ajax' && (m = g.split(/\s+/, 2), g = m.shift(), m = m.shift())); k || (n === 'inline' ? g ? k = f(r(g) ? g.replace(/.*(?=#[^\s]+$)/, '') : g) : l.isDom && (k = c) :
        n === 'html' ? k = g : n || g || !l.isDom || (n = 'inline', k = c)); f.extend(l, { href: g, type: n, content: k, title: h, selector: m }); a[e] = l; }), b.opts = f.extend(!0, {}, b.defaults, d), d.keys !== w && (b.opts.keys = d.keys ? f.extend({}, b.defaults.keys, d.keys) : !1), b.group = a, b._start(b.opts.index); } }, cancel: function() { let a = b.coming; a && !1 === b.trigger('onCancel') || (b.hideLoading(), a && (b.ajaxLoad && b.ajaxLoad.abort(), b.ajaxLoad = null, b.imgPreload && (b.imgPreload.onload = b.imgPreload.onerror = null), a.wrap && a.wrap.stop(!0, !0).trigger('onReset').remove(),
    b.coming = null, b.current || b._afterZoomOut(a))); }, close: function(a) { b.cancel(); !1 !== b.trigger('beforeClose') && (b.unbindEvents(), b.isActive && (b.isOpen && !0 !== a ? (b.isOpen = b.isOpened = !1, b.isClosing = !0, f('.fancybox-item, .fancybox-nav').remove(), b.wrap.stop(!0, !0).removeClass('fancybox-opened'), b.transitions[b.current.closeMethod]()) : (f('.fancybox-wrap').stop(!0).trigger('onReset').remove(), b._afterZoomOut()))) }, play: function(a) { let d = function() { clearTimeout(b.player.timer) }; let e = function() { d(); b.current && b.player.isActive &&
(b.player.timer = setTimeout(b.next, b.current.playSpeed)); }; let c = function() { d(); p.unbind('.player'); b.player.isActive = !1; b.trigger('onPlayEnd') }; !0 === a || !b.player.isActive && !1 !== a ? b.current && (b.current.loop || b.current.index < b.group.length - 1) && (b.player.isActive = !0, p.bind({ 'onCancel.player beforeClose.player': c, 'onUpdate.player': e, 'beforeLoad.player': d }), e(), b.trigger('onPlayStart')) : c(); }, next: function(a) { let d = b.current; d && (r(a) || (a = d.direction.next), b.jumpto(d.index + 1, a, 'next')) }, prev: function(a) { let d =
b.current; d && (r(a) || (a = d.direction.prev), b.jumpto(d.index - 1, a, 'prev')); }, jumpto: function(a, d, e) { let c = b.current; c && (a = m(a), b.direction = d || c.direction[a >= c.index ? 'next' : 'prev'], b.router = e || 'jumpto', c.loop && (0 > a && (a = c.group.length + a % c.group.length), a %= c.group.length), c.group[a] !== w && (b.cancel(), b._start(a))) }, reposition: function(a, d) { let e = b.current; let c = e ? e.wrap : null; let l; c && (l = b._getPosition(d), a && a.type === 'scroll' ? (delete l.position, c.stop(!0, !0).animate(l, 200)) : (c.css(l), e.pos = f.extend({}, e.dim, l))) },
    update: function(a) { let d = a && a.originalEvent && a.originalEvent.type; let e = !d || d === 'orientationchange'; e && (clearTimeout(C), C = null); b.isOpen && !C && (C = setTimeout(function() { let c = b.current; c && !b.isClosing && (b.wrap.removeClass('fancybox-tmp'), (e || d === 'load' || d === 'resize' && c.autoResize) && b._setDimension(), d === 'scroll' && c.canShrink || b.reposition(a), b.trigger('onUpdate'), C = null) }, e && !t ? 0 : 300)) }, toggle: function(a) { b.isOpen && (b.current.fitToView = f.type(a) === 'boolean' ? a : !b.current.fitToView, t && (b.wrap.removeAttr('style').addClass('fancybox-tmp'),
    b.trigger('onUpdate')), b.update()); }, hideLoading: function() { p.unbind('.loading'); f('#fancybox-loading').remove() }, showLoading: function() { let a; let d; b.hideLoading(); a = f('<div id="fancybox-loading"><div></div></div>').click(b.cancel).appendTo('body'); p.bind('keydown.loading', function(a) { (a.which || a.keyCode) === 27 && (a.preventDefault(), b.cancel()) }); b.defaults.fixed || (d = b.getViewport(), a.css({ position: 'absolute', top: 0.5 * d.h + d.y, left: 0.5 * d.w + d.x })); b.trigger('onLoading') }, getViewport: function() { let a = b.current &&
b.current.locked || !1; let d = { x: q.scrollLeft(), y: q.scrollTop() }; a && a.length ? (d.w = a[0].clientWidth, d.h = a[0].clientHeight) : (d.w = t && s.innerWidth ? s.innerWidth : q.width(), d.h = t && s.innerHeight ? s.innerHeight : q.height()); return d; }, unbindEvents: function() { b.wrap && u(b.wrap) && b.wrap.unbind('.fb'); p.unbind('.fb'); q.unbind('.fb') }, bindEvents: function() { let a = b.current; let d; a && (q.bind('orientationchange.fb' + (t ? '' : ' resize.fb') + (a.autoCenter && !a.locked ? ' scroll.fb' : ''), b.update), (d = a.keys) && p.bind('keydown.fb', function(e) { let c =
e.which || e.keyCode; let l = e.target || e.srcElement; if (c === 27 && b.coming) return !1; e.ctrlKey || e.altKey || e.shiftKey || e.metaKey || l && (l.type || f(l).is('[contenteditable]')) || f.each(d, function(d, l) { if (1 < a.group.length && l[c] !== w) return b[d](l[c]), e.preventDefault(), !1; if (-1 < f.inArray(c, l)) return b[d](), e.preventDefault(), !1; }); }), f.fn.mousewheel && a.mouseWheel && b.wrap.bind('mousewheel.fb', function(d, c, l, g) { for (var h = f(d.target || null), k = !1; h.length && !(k || h.is('.fancybox-skin') || h.is('.fancybox-wrap'));) { k = h[0] && !(h[0].style.overflow &&
h[0].style.overflow === 'hidden') && (h[0].clientWidth && h[0].scrollWidth > h[0].clientWidth || h[0].clientHeight && h[0].scrollHeight > h[0].clientHeight), h = f(h).parent(); }0 !== c && !k && 1 < b.group.length && !a.canShrink && (0 < g || 0 < l ? b.prev(0 < g ? 'down' : 'left') : (0 > g || 0 > l) && b.next(0 > g ? 'up' : 'right'), d.preventDefault()); })); }, trigger: function(a, d) { let e; let c = d || b.coming || b.current; if (c) { f.isFunction(c[a]) && (e = c[a].apply(c, Array.prototype.slice.call(arguments, 1))); if (!1 === e) return !1; c.helpers && f.each(c.helpers, function(d, e) { if (e &&
b.helpers[d] && f.isFunction(b.helpers[d][a]))b.helpers[d][a](f.extend(!0, {}, b.helpers[d].defaults, e), c); }); }p.trigger(a); }, isImage: function(a) { return r(a) && a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i) }, isSWF: function(a) { return r(a) && a.match(/\.(swf)((\?|#).*)?$/i) }, _start: function(a) { let d = {}; let e; let c; a = m(a); e = b.group[a] || null; if (!e) return !1; d = f.extend(!0, {}, b.opts, e); e = d.margin; c = d.padding; f.type(e) === 'number' && (d.margin = [e, e, e, e]); f.type(c) === 'number' && (d.padding = [c, c,
        c, c]); d.modal && f.extend(!0, d, { closeBtn: !1, closeClick: !1, nextClick: !1, arrows: !1, mouseWheel: !1, keys: null, helpers: { overlay: { closeClick: !1 }}}); d.autoSize && (d.autoWidth = d.autoHeight = !0); d.width === 'auto' && (d.autoWidth = !0); d.height === 'auto' && (d.autoHeight = !0); d.group = b.group; d.index = a; b.coming = d; if (!1 === b.trigger('beforeLoad')) { b.coming = null } else { c = d.type; e = d.href; if (!c) return b.coming = null, b.current && b.router && 'jumpto' !== b.router ? (b.current.index = a, b[b.router](b.direction)) : !1; b.isActive = !0; if (c ===
'image' || c === 'swf')d.autoHeight = d.autoWidth = !1, d.scrolling = 'visible'; c === 'image' && (d.aspectRatio = !0); c === 'iframe' && t && (d.scrolling = 'scroll'); d.wrap = f(d.tpl.wrap).addClass('fancybox-' + (t ? 'mobile' : 'desktop') + ' fancybox-type-' + c + ' fancybox-tmp ' + d.wrapCSS).appendTo(d.parent || 'body'); f.extend(d, { skin: f('.fancybox-skin', d.wrap), outer: f('.fancybox-outer', d.wrap), inner: f('.fancybox-inner', d.wrap) }); f.each(['Top', 'Right', 'Bottom', 'Left'], function(a, b) { d.skin.css('padding' + b, x(d.padding[a])) }); b.trigger('onReady');
    if (c === 'inline' || c === 'html') { if (!d.content || !d.content.length) return b._error('content'); } else if (!e) { return b._error('href') } c === 'image' ? b._loadImage() : c === 'ajax' ? b._loadAjax() : c === 'iframe' ? b._loadIframe() : b._afterLoad(); } }, _error: function(a) { f.extend(b.coming, { type: 'html', autoWidth: !0, autoHeight: !0, minWidth: 0, minHeight: 0, scrolling: 'no', hasError: a, content: b.coming.tpl.error }); b._afterLoad() }, _loadImage: function() { let a = b.imgPreload = new Image(); a.onload = function() { this.onload = this.onerror = null; b.coming.width =
this.width / b.opts.pixelRatio; b.coming.height = this.height / b.opts.pixelRatio; b._afterLoad(); }; a.onerror = function() { this.onload = this.onerror = null; b._error('image') }; a.src = b.coming.href; !0 !== a.complete && b.showLoading(); }, _loadAjax: function() { let a = b.coming; b.showLoading(); b.ajaxLoad = f.ajax(f.extend({}, a.ajax, { url: a.href, error: function(a, e) { b.coming && 'abort' !== e ? b._error('ajax', a) : b.hideLoading() }, success: function(d, e) { e === 'success' && (a.content = d, b._afterLoad()) } })) }, _loadIframe: function() { let a = b.coming;
        let d = f(a.tpl.iframe.replace(/\{rnd\}/g, (new Date()).getTime())).attr('scrolling', t ? 'auto' : a.iframe.scrolling).attr('src', a.href); f(a.wrap).bind('onReset', function() { try { f(this).find('iframe').hide().attr('src', '//about:blank').end().empty() } catch (a) {} }); a.iframe.preload && (b.showLoading(), d.one('load', function() { f(this).data('ready', 1); t || f(this).bind('load.fb', b.update); f(this).parents('.fancybox-wrap').width('100%').removeClass('fancybox-tmp').show(); b._afterLoad() })); a.content = d.appendTo(a.inner); a.iframe.preload ||
b._afterLoad(); }, _preloadImages: function() { let a = b.group; let d = b.current; let e = a.length; let c = d.preload ? Math.min(d.preload, e - 1) : 0; let f; let g; for (g = 1; g <= c; g += 1)f = a[(d.index + g) % e], f.type === 'image' && f.href && ((new Image()).src = f.href); }, _afterLoad: function() { let a = b.coming; let d = b.current; let e; let c; let l; let g; let h; b.hideLoading(); if (a && !1 !== b.isActive) { if (!1 === b.trigger('afterLoad', a, d)) { a.wrap.stop(!0).trigger('onReset').remove(), b.coming = null } else { d && (b.trigger('beforeChange', d), d.wrap.stop(!0).removeClass('fancybox-opened').find('.fancybox-item, .fancybox-nav').remove());
        b.unbindEvents(); e = a.content; c = a.type; l = a.scrolling; f.extend(b, { wrap: a.wrap, skin: a.skin, outer: a.outer, inner: a.inner, current: a, previous: d }); g = a.href; switch (c) { case 'inline': case 'ajax': case 'html': a.selector ? e = f('<div>').html(e).find(a.selector) : u(e) && (e.data('fancybox-placeholder') || e.data('fancybox-placeholder', f('<div class="fancybox-placeholder"></div>').insertAfter(e).hide()), e = e.show().detach(), a.wrap.bind('onReset', function() { f(this).find(e).length && e.hide().replaceAll(e.data('fancybox-placeholder')).data('fancybox-placeholder',
            !1); })); break; case 'image': e = a.tpl.image.replace(/\{href\}/g, g); break; case 'swf': e = '<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + g + '"></param>', h = '', f.each(a.swf, function(a, b) { e += '<param name="' + a + '" value="' + b + '"></param>'; h += ' ' + a + '="' + b + '"' }), e += '<embed src="' + g + '" type="application/x-shockwave-flash" width="100%" height="100%"' + h + '></embed></object>'; }u(e) && e.parent().is(a.inner) || a.inner.append(e); b.trigger('beforeShow');
        a.inner.css('overflow', l === 'yes' ? 'scroll' : l === 'no' ? 'hidden' : l); b._setDimension(); b.reposition(); b.isOpen = !1; b.coming = null; b.bindEvents(); if (!b.isOpened)f('.fancybox-wrap').not(a.wrap).stop(!0).trigger('onReset').remove(); else if (d.prevMethod)b.transitions[d.prevMethod](); b.transitions[b.isOpened ? a.nextMethod : a.openMethod](); b._preloadImages(); } } }, _setDimension: function() { let a = b.getViewport(); let d = 0; var e = !1; var c = !1; var e = b.wrap; let l = b.skin; let g = b.inner; let h = b.current; var c = h.width; let k = h.height; let n = h.minWidth; let v = h.minHeight; let p = h.maxWidth;
        let q = h.maxHeight; let t = h.scrolling; let r = h.scrollOutside ? h.scrollbarWidth : 0; let y = h.margin; let z = m(y[1] + y[3]); let s = m(y[0] + y[2]); let w; let A; let u; let D; let B; let G; let C; let E; let I; e.add(l).add(g).width('auto').height('auto').removeClass('fancybox-tmp'); y = m(l.outerWidth(!0) - l.width()); w = m(l.outerHeight(!0) - l.height()); A = z + y; u = s + w; D = F(c) ? (a.w - A) * m(c) / 100 : c; B = F(k) ? (a.h - u) * m(k) / 100 : k; if (h.type === 'iframe') { if (I = h.content, h.autoHeight && I.data('ready') === 1) { try { I[0].contentWindow.document.location && (g.width(D).height(9999), G = I.contents().find('body'), r && G.css('overflow-x',
            'hidden'), B = G.outerHeight(!0)); } catch (H) {} } } else if (h.autoWidth || h.autoHeight) { g.addClass('fancybox-tmp'), h.autoWidth || g.width(D), h.autoHeight || g.height(B), h.autoWidth && (D = g.width()), h.autoHeight && (B = g.height()), g.removeClass('fancybox-tmp') }c = m(D); k = m(B); E = D / B; n = m(F(n) ? m(n, 'w') - A : n); p = m(F(p) ? m(p, 'w') - A : p); v = m(F(v) ? m(v, 'h') - u : v); q = m(F(q) ? m(q, 'h') - u : q); G = p; C = q; h.fitToView && (p = Math.min(a.w - A, p), q = Math.min(a.h - u, q)); A = a.w - z; s = a.h - s; h.aspectRatio ? (c > p && (c = p, k = m(c / E)), k > q && (k = q, c = m(k * E)), c < n && (c = n, k = m(c /
E)), k < v && (k = v, c = m(k * E))) : (c = Math.max(n, Math.min(c, p)), h.autoHeight && 'iframe' !== h.type && (g.width(c), k = g.height()), k = Math.max(v, Math.min(k, q))); if (h.fitToView) if (g.width(c).height(k), e.width(c + y), a = e.width(), z = e.height(), h.aspectRatio) for (;(a > A || z > s) && c > n && k > v && !(19 < d++);)k = Math.max(v, Math.min(q, k - 10)), c = m(k * E), c < n && (c = n, k = m(c / E)), c > p && (c = p, k = m(c / E)), g.width(c).height(k), e.width(c + y), a = e.width(), z = e.height(); else c = Math.max(n, Math.min(c, c - (a - A))), k = Math.max(v, Math.min(k, k - (z - s))); r && t === 'auto' && k < B &&
c + y + r < A && (c += r); g.width(c).height(k); e.width(c + y); a = e.width(); z = e.height(); e = (a > A || z > s) && c > n && k > v; c = h.aspectRatio ? c < G && k < C && c < D && k < B : (c < G || k < C) && (c < D || k < B); f.extend(h, { dim: { width: x(a), height: x(z) }, origWidth: D, origHeight: B, canShrink: e, canExpand: c, wPadding: y, hPadding: w, wrapSpace: z - l.outerHeight(!0), skinSpace: l.height() - k }); !I && h.autoHeight && k > v && k < q && !c && g.height('auto'); }, _getPosition: function(a) { let d = b.current; let e = b.getViewport(); var c = d.margin; let f = b.wrap.width() + c[1] + c[3]; let g = b.wrap.height() + c[0] + c[2]; var c = {
        position: 'absolute',
        top: c[0], left: c[3]
    }; d.autoCenter && d.fixed && !a && g <= e.h && f <= e.w ? c.position = 'fixed' : d.locked || (c.top += e.y, c.left += e.x); c.top = x(Math.max(c.top, c.top + (e.h - g) * d.topRatio)); c.left = x(Math.max(c.left, c.left + (e.w - f) * d.leftRatio)); return c; }, _afterZoomIn: function() { let a = b.current; a && ((b.isOpen = b.isOpened = !0, b.wrap.css('overflow', 'visible').addClass('fancybox-opened'), b.update(), (a.closeClick || a.nextClick && 1 < b.group.length) && b.inner.css('cursor', 'pointer').bind('click.fb', function(d) { f(d.target).is('a') || f(d.target).parent().is('a') ||
(d.preventDefault(), b[a.closeClick ? 'close' : 'next']()); }), a.closeBtn && f(a.tpl.closeBtn).appendTo(b.skin).bind('click.fb', function(a) { a.preventDefault(); b.close() }), a.arrows && 1 < b.group.length && ((a.loop || 0 < a.index) && f(a.tpl.prev).appendTo(b.outer).bind('click.fb', b.prev), (a.loop || a.index < b.group.length - 1) && f(a.tpl.next).appendTo(b.outer).bind('click.fb', b.next)), b.trigger('afterShow'), a.loop || a.index !== a.group.length - 1) ? b.opts.autoPlay && !b.player.isActive && (b.opts.autoPlay = !1, b.play(!0)) : b.play(!1)); },
    _afterZoomOut: function(a) { a = a || b.current; f('.fancybox-wrap').trigger('onReset').remove(); f.extend(b, { group: {}, opts: {}, router: !1, current: null, isActive: !1, isOpened: !1, isOpen: !1, isClosing: !1, wrap: null, skin: null, outer: null, inner: null }); b.trigger('afterClose', a) }
}); b.transitions = {
    getOrigPosition: function() { let a = b.current; let d = a.element; let e = a.orig; let c = {}; let f = 50; let g = 50; let h = a.hPadding; let k = a.wPadding; let n = b.getViewport(); !e && a.isDom && d.is(':visible') && (e = d.find('img:first'), e.length || (e = d)); u(e) ? (c = e.offset(), e.is('img') &&
(f = e.outerWidth(), g = e.outerHeight())) : (c.top = n.y + (n.h - g) * a.topRatio, c.left = n.x + (n.w - f) * a.leftRatio); if (b.wrap.css('position') === 'fixed' || a.locked)c.top -= n.y, c.left -= n.x; return c = { top: x(c.top - h * a.topRatio), left: x(c.left - k * a.leftRatio), width: x(f + k), height: x(g + h) }; }, step: function(a, d) { let e; let c; let f = d.prop; c = b.current; let g = c.wrapSpace; let h = c.skinSpace; if (f === 'width' || f === 'height') { e = d.end === d.start ? 1 : (a - d.start) / (d.end - d.start), b.isClosing && (e = 1 - e), c = f === 'width' ? c.wPadding : c.hPadding, c = a - c, b.skin[f](m(f ===
'width' ? c : c - g * e)), b.inner[f](m(f === 'width' ? c : c - g * e - h * e)); } }, zoomIn: function() { let a = b.current; let d = a.pos; let e = a.openEffect; let c = e === 'elastic'; let l = f.extend({ opacity: 1 }, d); delete l.position; c ? (d = this.getOrigPosition(), a.openOpacity && (d.opacity = 0.1)) : e === 'fade' && (d.opacity = 0.1); b.wrap.css(d).animate(l, { duration: e === 'none' ? 0 : a.openSpeed, easing: a.openEasing, step: c ? this.step : null, complete: b._afterZoomIn }) }, zoomOut: function() { let a = b.current; let d = a.closeEffect; let e = d === 'elastic'; let c = { opacity: 0.1 }; e && (c = this.getOrigPosition(), a.closeOpacity &&
(c.opacity = 0.1)); b.wrap.animate(c, { duration: d === 'none' ? 0 : a.closeSpeed, easing: a.closeEasing, step: e ? this.step : null, complete: b._afterZoomOut }); }, changeIn: function() { let a = b.current; let d = a.nextEffect; let e = a.pos; let c = { opacity: 1 }; let f = b.direction; let g; e.opacity = 0.1; d === 'elastic' && (g = f === 'down' || f === 'up' ? 'top' : 'left', f === 'down' || f === 'right' ? (e[g] = x(m(e[g]) - 200), c[g] = '+=200px') : (e[g] = x(m(e[g]) + 200), c[g] = '-=200px')); d === 'none' ? b._afterZoomIn() : b.wrap.css(e).animate(c, { duration: a.nextSpeed, easing: a.nextEasing, complete: b._afterZoomIn }) },
    changeOut: function() { let a = b.previous; let d = a.prevEffect; let e = { opacity: 0.1 }; let c = b.direction; d === 'elastic' && (e[c === 'down' || c === 'up' ? 'top' : 'left'] = (c === 'up' || c === 'left' ? '-' : '+') + '=200px'); a.wrap.animate(e, { duration: d === 'none' ? 0 : a.prevSpeed, easing: a.prevEasing, complete: function() { f(this).trigger('onReset').remove() } }) }
}; b.helpers.overlay = {
    defaults: { closeClick: !0, speedOut: 200, showEarly: !0, css: {}, locked: !t, fixed: !0 }, overlay: null, fixed: !1, el: f('html'), create: function(a) { let d; a = f.extend({}, this.defaults, a); this.overlay &&
this.close(); d = b.coming ? b.coming.parent : a.parent; this.overlay = f('<div class="fancybox-overlay"></div>').appendTo(d && d.lenth ? d : 'body'); this.fixed = !1; a.fixed && b.defaults.fixed && (this.overlay.addClass('fancybox-overlay-fixed'), this.fixed = !0); }, open: function(a) { let d = this; a = f.extend({}, this.defaults, a); this.overlay ? this.overlay.unbind('.overlay').width('auto').height('auto') : this.create(a); this.fixed || (q.bind('resize.overlay', f.proxy(this.update, this)), this.update()); a.closeClick && this.overlay.bind('click.overlay',
        function(a) { if (f(a.target).hasClass('fancybox-overlay')) return b.isActive ? b.close() : d.close(), !1; }); this.overlay.css(a.css).show(); }, close: function() { q.unbind('resize.overlay'); this.el.hasClass('fancybox-lock') && (f('.fancybox-margin').removeClass('fancybox-margin'), this.el.removeClass('fancybox-lock'), q.scrollTop(this.scrollV).scrollLeft(this.scrollH)); f('.fancybox-overlay').remove().hide(); f.extend(this, { overlay: null, fixed: !1 }) }, update: function() { let a = '100%'; let b; this.overlay.width(a).height('100%');
        J ? (b = Math.max(H.documentElement.offsetWidth, H.body.offsetWidth), p.width() > b && (a = p.width())) : p.width() > q.width() && (a = p.width()); this.overlay.width(a).height(p.height()); }, onReady: function(a, b) { let e = this.overlay; f('.fancybox-overlay').stop(!0, !0); e || this.create(a); a.locked && this.fixed && b.fixed && (b.locked = this.overlay.append(b.wrap), b.fixed = !1); !0 === a.showEarly && this.beforeShow.apply(this, arguments) }, beforeShow: function(a, b) { b.locked && !this.el.hasClass('fancybox-lock') && (!1 !== this.fixPosition && f('*').filter(function() { return f(this).css('position') ===
'fixed' && !f(this).hasClass('fancybox-overlay') && !f(this).hasClass('fancybox-wrap'); }).addClass('fancybox-margin'), this.el.addClass('fancybox-margin'), this.scrollV = q.scrollTop(), this.scrollH = q.scrollLeft(), this.el.addClass('fancybox-lock'), q.scrollTop(this.scrollV).scrollLeft(this.scrollH)); this.open(a); }, onUpdate: function() { this.fixed || this.update() }, afterClose: function(a) { this.overlay && !b.coming && this.overlay.fadeOut(a.speedOut, f.proxy(this.close, this)) }
}; b.helpers.title = {
    defaults: {
        type: 'float',
        position: 'bottom'
    }, beforeShow: function(a) { let d = b.current; let e = d.title; let c = a.type; f.isFunction(e) && (e = e.call(d.element, d)); if (r(e) && '' !== f.trim(e)) { d = f('<div class="fancybox-title fancybox-title-' + c + '-wrap">' + e + '</div>'); switch (c) { case 'inside': c = b.skin; break; case 'outside': c = b.wrap; break; case 'over': c = b.inner; break; default: c = b.skin, d.appendTo('body'), J && d.width(d.width()), d.wrapInner('<span class="child"></span>'), b.current.margin[2] += Math.abs(m(d.css('margin-bottom'))); }d[a.position === 'top' ? 'prependTo' :
        'appendTo'](c); } }
}; f.fn.fancybox = function(a) { let d; let e = f(this); let c = this.selector || ''; let l = function(g) { let h = f(this).blur(); let k = d; let l; let m; g.ctrlKey || g.altKey || g.shiftKey || g.metaKey || h.is('.fancybox-wrap') || (l = a.groupAttr || 'data-fancybox-group', m = h.attr(l), m || (l = 'rel', m = h.get(0)[l]), m && '' !== m && 'nofollow' !== m && (h = c.length ? f(c) : e, h = h.filter('[' + l + '="' + m + '"]'), k = h.index(this)), a.index = k, !1 !== b.open(h, a) && g.preventDefault()) }; a = a || {}; d = a.index || 0; c && !1 !== a.live ? p.undelegate(c, 'click.fb-start').delegate(c + ":not('.fancybox-item, .fancybox-nav')",
    'click.fb-start', l) : e.unbind('click.fb-start').bind('click.fb-start', l); this.filter('[data-fancybox-start=1]').trigger('click'); return this; }; p.ready(function() { let a; let d; f.scrollbarWidth === w && (f.scrollbarWidth = function() { let a = f('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo('body'); var b = a.children(); var b = b.innerWidth() - b.height(99).innerWidth(); a.remove(); return b }); f.support.fixedPosition === w && (f.support.fixedPosition = (function() { let a = f('<div style="position:fixed;top:20px;"></div>').appendTo('body');
    let b = a[0].offsetTop === 20 || a[0].offsetTop === 15; a.remove(); return b; })()); f.extend(b.defaults, { scrollbarWidth: f.scrollbarWidth(), fixed: f.support.fixedPosition, parent: f('body') }); a = f(s).width(); K.addClass('fancybox-lock-test'); d = f(s).width(); K.removeClass('fancybox-lock-test'); f("<style type='text/css'>.fancybox-margin{margin-right:" + (d - a) + 'px;}</style>').appendTo('head'); }); })(window, document, jQuery);